import asyncio
import os
import pandas as pd
from aiogram import Bot, Dispatcher, types
from photo_detector import photo_detector
from video_detector import video_detect
import cv2
# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot_token = '6467262183:AAHwRJW6hJ8vW86PIGsnFoYMi8zBlsX4OAE'
bot = Bot(token=bot_token)
dp = Dispatcher(bot)
SERVER_URL = "http://26.221.175.97:5116/api/sendPhotoWithURL"
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∞ —è —Å–∫–∞–∂—É, –Ω–∞ –∫–æ–≥–æ —Ç—ã –ø–æ—Ö–æ–∂ üòâ")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ (—Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ)
@dp.message_handler(content_types=['photo','video','video_note'])
async def media_handler(message: types.Message):
    if message.photo:
        file_id=message.photo[-1].file_id
    elif message.video:
        file_id = message.video.file_id
    elif message.video_note:
        file_id = message.video_note.file_id
    else:
        await message.reply("–ú–Ω–µ –Ω—É–∂–Ω–æ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –∞ –Ω–µ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ.")
        return

    # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
    file_path=os.path.join('media',f"{file_id}.jpg" if message.photo else f"{file_id}.mp4")
    if(message.photo):
        await save_media(message.photo[-1],file_path)
        flag=False
    elif (message.video):
        await save_media(message.video, file_path)
        flag = True
    else:
        await save_media(message.video_note,file_path)
        flag = True
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É
    await message.reply("–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –º–µ–¥–∏–∞—Ñ–∞–π–ª –∏ –Ω–∞—á–∞–ª–∏ –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫—É.")
    await send_media_and_info_to_chat(message,file_path, flag)
#–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –∏ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–±–æ—Ç–∞
async def send_media_and_info_to_chat(message: types.Message,file_path, flag):
    #–¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –¥–ª—è —Ñ–æ—Ç–æ –∏ –¥–ª—è –≤–∏–¥–µ–æ
    if not flag:
        result = photo_detector(file_path)
        if result is None:
            await message.answer("–õ–∏—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return
        for (x, y, w, h), d_res in result:
            print(d_res)
            cv2.imwrite("./media/tmp.jpg", cv2.imread(file_path)[y:y + h, x:x + w])

            with open("./media/tmp.jpg", 'rb') as photo:
                await bot.send_photo(
                    chat_id=message.chat.id,
                    photo=photo
                )

            persons = d_res['class']
            probs = d_res['prob']
            await message.answer("–í–æ—Ç –Ω–∞ –∫–æ–≥–æ —Ç—ã –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø–æ—Ö–æ–∂ –ø–æ –Ω–∞—à–µ–º—É –º–Ω–µ–Ω–∏—éüòâ")

            df = pd.read_csv("ussr_russia.csv", sep=";")

            with open("ussr_russia.csv", "r", encoding="utf-8") as file:

                for pers, prob in zip(persons, probs):

                    tmp = df[df['id'] == int(pers)]

                    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—á–Ω–æ—Å—Ç–∏
                    name = tmp["name"].values
                    link = tmp["link"].values
                    specialization = tmp["specialization"].values
                    films_years = tmp["films_years"].values
                    description = tmp["description"].values

                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                    photo_path = os.path.join(f"data/{pers}", '1.jpg')
                    if not os.path.exists(photo_path):
                        continue

                    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
                    with open(photo_path, 'rb') as photo_file:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—á–Ω–æ—Å—Ç–∏ –≤ —á–∞—Ç
                        await bot.send_photo(
                            chat_id=message.chat.id,
                            photo=photo_file,
                            caption=f"–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ—Ö–æ–∂–µ—Å—Ç–∏: {prob}%\n–ò–º—è: {name[0]}\n–°—Å—ã–ª–∫–∞: {link[0]}\n–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {specialization[0]}\n–ì–æ–¥—ã —Å—ä–µ–º–æ–∫: {films_years[0]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {description[0]}"
                        )

    else:
        d_res = video_detect(file_path)
        persons = d_res['class']
        probs = d_res['prob']
        await message.answer("–í–æ—Ç –Ω–∞ –∫–æ–≥–æ —Ç—ã –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø–æ—Ö–æ–∂ –ø–æ –Ω–∞—à–µ–º—É –º–Ω–µ–Ω–∏—éüòâ")

        df = pd.read_csv("ussr_russia.csv", sep=";")

        with open("ussr_russia.csv", "r", encoding="utf-8") as file:

            for pers, prob in zip(persons, probs):

                tmp = df[df['id'] == int(pers)]

                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—á–Ω–æ—Å—Ç–∏
                name = tmp["name"].values
                link = tmp["link"].values
                specialization = tmp["specialization"].values
                films_years = tmp["films_years"].values
                description = tmp["description"].values

                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                photo_path = os.path.join(f"data/{pers}", '1.jpg')
                if not os.path.exists(photo_path):
                    continue

                # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
                with open(photo_path, 'rb') as photo_file:

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—á–Ω–æ—Å—Ç–∏ –≤ —á–∞—Ç
                    await bot.send_photo(
                        chat_id=message.chat.id,
                        photo=photo_file,
                        caption=f"–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ—Ö–æ–∂–µ—Å—Ç–∏: {prob}%\n–ò–º—è: {name[0]}\n–°—Å—ã–ª–∫–∞: {link[0]}\n–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {specialization[0]}\n–ì–æ–¥—ã —Å—ä–µ–º–æ–∫: {films_years[0]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {description[0]}"
                    )


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –ø–∞–ø–∫—É
async def save_media(media,file_path):
    with open(file_path, 'wb') as file:
        await media.download(file)
async def main():
    await dp.start_polling()
    await asyncio.sleep(3600)
    await dp.stop_polling()

if __name__ == '__main__':
    asyncio.run(main())
